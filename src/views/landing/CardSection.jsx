import { useState } from 'react';
import { useTheme } from '@mui/material/styles';
import { Container, Grid,Typography, Stack, Button, Box, Collapse, Divider } from '@mui/material';
import { CheckCircleOutline, ExpandMore } from '@mui/icons-material';

import FadeInWhenVisible from './Animation';
import SubCard from 'ui-component/cards/SubCard';
import Avatar from 'ui-component/extended/Avatar';

import GridViewIcon from '@mui/icons-material/GridView';
import RocketLaunchIcon from '@mui/icons-material/RocketLaunch';
import BusinessCenterIcon from '@mui/icons-material/BusinessCenter';

export default function PricingPlans() {
  const theme = useTheme();
  const [expanded, setExpanded] = useState({});

  const handleToggle = (id) => {
    setExpanded((prev) => ({ ...prev, [id]: !prev[id] }));
  };

  const commonCardBg = theme.palette.mode === 'dark' ? '#282C46' : '#F5F7FF';

  const plans = [
    {
      id: 'start',
      title: 'Start',
      subtitle: '–î–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏ –Ω–µ–±–æ–ª—å—à–∏—Ö –∫–æ–º–∞–Ω–¥',
      users: '–î–æ 15 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      price: '–• BYN / –º–µ—Å—è—Ü',
      shortFeatures: [
        '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏',
        '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–µ–∑–¥–æ–≤',
        '–§–æ—Ç–æ—Ñ–∏–∫—Å–∞—Ü–∏—è –∏ —á–µ–∫-–ª–∏—Å—Ç—ã',
        '–û–Ω–ª–∞–π–Ω-–∫–∞—Ä—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
        '–ë–∞–∑–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
        '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
        '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ email'
      ],
      description:
        '–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞—é—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—ã–µ–∑–¥–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã —É–π—Ç–∏ –æ—Ç —Ö–∞–æ—Å–∞ –≤ –∑–∞—è–≤–∫–∞—Ö –∏ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ.',
      features: [
        '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏ ‚Äî –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º –∏ –∑–∞–¥–∞—á–∞–º —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ, –±–µ–∑ Excel –∏ –±—É–º–∞–∂–µ–∫.',
        '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–µ–∑–¥–æ–≤ ‚Äî —É–¥–æ–±–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º, –∫–æ–Ω—Ç—Ä–æ–ª—å —Å—Ä–æ–∫–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.',
        '–§–æ—Ç–æ—Ñ–∏–∫—Å–∞—Ü–∏—è –∏ —á–µ–∫-–ª–∏—Å—Ç—ã ‚Äî –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç—å ¬´–¥–æ/–ø–æ—Å–ª–µ¬ª, –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç.',
        '–û–Ω–ª–∞–π–Ω-–∫–∞—Ä—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ ‚Äî –ø—Ä–æ—Å—Ç–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤.',
        '–ë–∞–∑–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ ‚Äî –∫–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –ø–æ –∑–∞—è–≤–∫–∞–º, –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º —Ä–∞–±–æ—Ç–∞–º.',
        '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ‚Äî –¥–æ—Å—Ç—É–ø –∫ –∑–∞–¥–∞–Ω–∏—è–º –∏ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –≤ –¥–æ—Ä–æ–≥–µ.',
        '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ email ‚Äî –±—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ.'
      ],
      icon: <GridViewIcon sx={{ fontSize: '2.25rem', color: '#4CAF50' }} />, // üü© –ó–µ–ª—ë–Ω–∞—è
      color: '#4CAF50'
    },
    {
      id: 'team',
      title: 'Team',
      subtitle: '–î–ª—è —Ä–∞—Å—Ç—É—â–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π',
      users: '–î–æ 50 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      price: 'Y BYN / –º–µ—Å—è—Ü',
      shortFeatures: [
        '–í—Å—ë –∏–∑ Start',
        '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
        '–û–ø—Ä–æ—Å—ã –∏ —Ñ–∏–¥–±–µ–∫-—Ñ–æ—Ä–º—ã',
        '–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ CRM',
        '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ —á–∞—Ç–µ'
      ],
      description:
        '–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö –æ—Ç–¥–µ–ª–æ–≤ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –±—Ä–∏–≥–∞–¥–∞–º–∏, –≥–¥–µ –≤–∞–∂–Ω—ã –∫–æ–Ω—Ç—Ä–æ–ª—å –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.',
      features: [
        '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ ‚Äî –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–æ–¥—É–ª—å —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å—é –Ω–∞ –±–∞–∑–µ Apache Superset.',
        '–û–ø—Ä–æ—Å—ã –∏ —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ ‚Äî –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã –∏ —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞.',
        '–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ CRM ‚Äî –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –í–∞–º–∏ —Å–∏—Å—Ç–µ–º.',
        '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ —á–∞—Ç–µ ‚Äî –±—ã—Å—Ç—Ä–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø—Ä—è–º–æ –≤ —Ä–∞–±–æ—á–µ–º –ø—Ä–æ—Ü–µ—Å—Å–µ.'
      ],
      icon: <RocketLaunchIcon sx={{ fontSize: '2.25rem', color: '#1976D2' }} />, // üîµ –°–∏–Ω—è—è
      color: '#1976D2'
    },
    {
      id: 'business',
      title: 'Business',
      subtitle: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ ¬´–ø–æ–¥ –∫–ª—é—á¬ª',
      users: '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π',
      price: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —Ä–∞—Å—á—ë—Ç',
      shortFeatures: [
        '–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ Team',
        'ERP/CRM/API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è',
        '–ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –ø–æ–¥ –ø—Ä–æ—Ü–µ—Å—Å—ã',
        '–ê–≤—Ç–æ–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫',
        'GPS-—Ç—Ä–µ–∫–∏–Ω–≥',
        '–û–±—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä',
        '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7'
      ],
      description:
        '–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –¥–µ—Å—è—Ç–∫–∞–º–∏ –±—Ä–∏–≥–∞–¥ –∏ —Ñ–∏–ª–∏–∞–ª–æ–≤, –≥–¥–µ –Ω—É–∂–Ω—ã –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è. Planify Business –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å –≤–∞—à–∏–º –±–∏–∑–Ω–µ—Å–æ–º –∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º—É –∫–æ–º–ø–∞–Ω–∏–∏.',
      features: [
        '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å ERP/CRM/API ‚Äî –µ–¥–∏–Ω–∞—è —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª–µ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ –∫–æ–º–ø–∞–Ω–∏–∏, –≤—ã—è–≤–ª—è—Ç—å –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ —É–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è.',
        '–ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è —Ä–µ—à–µ–Ω–∏—è ‚Äî –ø–æ–¥—Å—Ç—Ä–æ–π—Ç–µ Planify –ø–æ–¥ –ø—Ä–æ—Ü–µ—Å—Å—ã –∏–º–µ–Ω–Ω–æ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏. –ì–∏–±–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤, –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –∏ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏ –ø–æ–º–æ–≥–∞–µ—Ç –≤–Ω–µ–¥—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –±–µ–∑ –ª–æ–º–∫–∏ –ø—Ä–∏–≤—ã—á–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫.',
        '–ú–æ–¥—É–ª—å ¬´–ê–≤—Ç–æ–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫¬ª ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –ø–æ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º –º–∞—Ä—à—Ä—É—Ç–∞–º –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤—ã–µ–∑–¥–æ–≤ —Å —É—á—ë—Ç–æ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫–æ–º–ø–∞–Ω–∏–∏. –≠—Ç–æ —ç–∫–æ–Ω–æ–º–∏—Ç –≤—Ä–µ–º—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤, —Å–Ω–∏–∂–∞–µ—Ç —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –ª–æ–≥–∏—Å—Ç–∏–∫—É –∏ —É—Å–∫–æ—Ä—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤.',
        '–ú–æ–¥—É–ª—å ¬´GPS-—Ç—Ä–µ–∫–∏–Ω–≥¬ª ‚Äî —Ç–æ—á–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π –≤—ã–µ–∑–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –≤—ã–µ–∑–¥–∞–º–∏, –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π –∏ –¥–æ–≤–µ—Ä–∏–µ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –∫–ª–∏–µ–Ω—Ç–æ–≤.',
        '–û–±—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ ‚Äî –ø–æ—à–∞–≥–æ–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤. –í–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –±—ã—Å—Ç—Ä–æ –æ—Å–≤–∞–∏–≤–∞—é—Ç Planify –∏ –Ω–∞—á–∏–Ω–∞—é—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ —Å –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è.',
        '–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –∏ –∞–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã ‚Äî –ø–æ–º–æ—â—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∏ –∑–∞–ø—É—Å–∫–µ —Å–∏—Å—Ç–µ–º—ã.',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä ‚Äî –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º.',
        '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7 ‚Äî –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–º–æ—â—å.'
      ],
      icon: <BusinessCenterIcon sx={{ fontSize: '2.25rem', color: '#9C27B0' }} />, // üü™ –§–∏–æ–ª–µ—Ç–æ–≤–∞—è
      color: '#9C27B0'
    }
  ];

  return (
    <section aria-labelledby="tariff-plans">
      <Box
        sx={{
          py: { xs: 6, md: 12 },
          px: { xs: 2, sm: 3, md: 4 },
          bgcolor: `#eef2f6`,
          position: 'relative'
        }}
      >
        <Container maxWidth="lg">
          <Grid container spacing={3} justifyContent="center" textAlign="center" sx={{ mb: 6 }}>
            <Grid size={12}>
              <Typography variant="h2" sx={{ fontSize: { xs: '1.5rem', sm: '2.125rem' }, fontWeight: 700,mb: -1 }}>
                –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ Planify
              </Typography>
            </Grid>
            <Grid size={12}>
              <Typography variant="body2" sx={{ fontSize: '1rem', mb: -2 }} align="center">
                –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π—Ç–µ –≤—ã–µ–∑–¥–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏ –Ω–∞—á–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ
              </Typography>
            </Grid>
          </Grid>

          <article aria-labelledby="pricing-cards">
            <Grid container spacing={{ xs: 4, sm: 5 }} justifyContent="center">
              {plans.map((plan) => (
                <Grid key={plan.id} size={{ md: 4, sm: 6, xs: 12 }}>
                  <FadeInWhenVisible>
                    <SubCard
                      sx={{
                        bgcolor: commonCardBg,
                        borderRadius: 6,
                        textAlign: 'left',
                        position: 'relative',
                        overflow: 'hidden',
                        height: '100%',
                        border: `1px solid ${theme.palette.divider}`,
                        transition: 'all 0.3s',
                        '&:hover': {
                          transform: 'translateY(-6px)',
                          boxShadow: theme.shadows[10],
                          '& .expand-icon': { transform: 'rotate(180deg)' }
                        }
                      }}
                    >
                      <Box sx={{ p: 2.5 }}>
                        <Stack spacing={2}>
                          <Stack direction="row" spacing={2} alignItems="center">
                            <Avatar
                              variant="rounded"
                              sx={{
                                bgcolor: 'background.paper',
                                height: 56,
                                width: 56,
                                borderRadius: '12px',
                                boxShadow: 3
                              }}
                            >
                              {plan.icon}
                            </Avatar>
                            <Box>
                              <Typography variant="h4" fontWeight={700} color="text.primary">
                                {plan.title}
                              </Typography>
                              <Typography variant="body2" color="text.secondary">
                                {plan.users}
                              </Typography>
                            </Box>
                          </Stack>

                          <Typography variant="body1" color="text.secondary">
                            {plan.subtitle}
                          </Typography>

                          <Typography variant="h5" fontWeight={600}>
                            {plan.price}
                          </Typography>

                          <Stack component="ul" spacing={1} sx={{ listStyle: 'none', p: 0, m: 0 }}>
                            {plan.shortFeatures.map((feature, idx) => (
                              <Stack
                                key={idx}
                                component="li"
                                direction="row"
                                spacing={1}
                                alignItems="center"
                                sx={{ fontSize: '0.875rem' }}
                              >
                                <CheckCircleOutline
                                  fontSize="small"
                                  sx={{ color: 'secondary.main' }}
                                />
                                <Typography variant="body2" color="text.primary">
                                  {feature}
                                </Typography>
                              </Stack>
                            ))}
                          </Stack>

                          <Button
                            onClick={() => handleToggle(plan.id)}
                            sx={{
                              mt: 2,
                              display: 'flex',
                              alignItems: 'center',
                              gap: 0.5,
                              color: 'text.primary',
                              fontWeight: 600,
                              textTransform: 'none',
                              justifyContent: 'flex-start',
                              transition: 'all 0.3s',
                              '&:hover': {
                                color: 'secondary.dark',
                                textDecoration: 'underline',
                                bgcolor: 'transparent'
                              },
                              '& .expand-icon': {
                                transition: 'all 0.3s',
                                transform: expanded[plan.id] ? 'rotate(180deg)' : 'rotate(0)'
                              }
                            }}
                            endIcon={
                              <ExpandMore
                                className="expand-icon"
                                sx={{
                                  color: 'text.primary',
                                  fontSize: '1.5rem',
                                  transition: 'color 0.3s',
                                  '&:hover': {
                                    color: 'secondary.dark'
                                  }
                                }}
                              />
                            }
                          >
                            {expanded[plan.id] ? '–°–∫—Ä—ã—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏' : '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ'}
                          </Button>

                          <Collapse in={expanded[plan.id]} timeout="auto" unmountOnExit>
                            <Typography variant="h6" fontWeight={600} gutterBottom color="text.primary">
                              –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {plan.title}
                            </Typography>
                            <Typography variant="body2" color="text.secondary" paragraph sx={{ lineHeight: 1.7 }}>
                              {plan.description}
                            </Typography>
                            <Divider sx={{ my: 1.5 }} />
                            <Typography variant="subtitle2" fontWeight={600} gutterBottom color="text.primary">
                              –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
                            </Typography>
                            <Stack component="ul" spacing={1} sx={{ pl: 2 }}>
                              {plan.features.map((feature, idx) => (
                                <Typography
                                  key={idx}
                                  component="li"
                                  variant="body2"
                                  color="text.secondary"
                                  sx={{ fontSize: '0.875rem', lineHeight: 1.6 }}
                                >
                                  {feature}
                                </Typography>
                              ))}
                            </Stack>
                          </Collapse>
                        </Stack>
                      </Box>
                    </SubCard>
                  </FadeInWhenVisible>
                </Grid>
              ))}
            </Grid>
          </article>
        </Container>
      </Box>
    </section>
  );
}